% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matching_bounds.R
\name{progressive_matching_bounds}
\alias{progressive_matching_bounds}
\title{Compute matching bounds for one-to-one matches at progressively relaxed constraint values}
\usage{
progressive_matching_bounds(
  Y,
  D,
  progressive_constraints,
  M,
  Kt,
  Kc,
  t_strict = FALSE,
  c_strict = FALSE,
  include_upper = TRUE,
  include_lower = TRUE,
  approximate = TRUE,
  approx_type = "fast",
  solver = "CPLEX",
  solver_control = list(),
  return_solver_out = FALSE
)
}
\arguments{
\item{Y}{The outcome vector.}

\item{D}{Binary vector with same size as Y. The treatment vector.}

\item{progressive_constraints}{A list of constraints generated with one of the available progressive constraint methods. All constraints must have the same number of tolerance values}

\item{M}{Integer. The total number of matches to make.}

\item{Kt}{Integer. How many times a treated unit can be re-used for matching. Set to 1 for ATT estimation.}

\item{Kc}{Integer. How many times a treated unit can be re-used for matching. Set to 1 for matching without replacement.}

\item{t_strict}{Boolean. Whether to match each treated unit to exactly Kt control units. Useful for 1-to-many matches. Cannot be true if c_strict is true.}

\item{c_strict}{Boolean. Whether to match each control unit to exactly Kc treated units. Useful for many-to-1 matches.}

\item{include_upper}{Boolean. Whether to compute the upper matching bound (default TRUE).}

\item{include_lower}{Boolean. Whether to compute the lower matching bound (default TRUE).}

\item{approximate}{Boolean. Whether to use a linear approximation to compute the bounds (default TRUE). See details for more on approximations.}

\item{approx_type}{String. What type of approximation should be used when approximate=TRUE. Currently must be one of 'fast' or 'feasible'. See details for more information.}

\item{solver}{One of "CPLEX" or "GLPK".}

\item{solver_control}{Extra parameters for solver. See the control parameters in RGlpk or Rcplex libraries for details on usable parameters.}

\item{return_solver_out}{Boolean. Whether to return the raw output from the solver (default FALSE)}
}
\value{
A list with the following elements:
\itemize{
\item max_m: for the Upper MB a Mx2 matrix with the index of each treated unit on the 1st column and the corresponding matched control in the 2nd column.
\item min_m: same as max_m but for the lower MB
\item max_te_mb: treatment effect estimated for the upper MB
\item min_te_mb: treatment effect estimated for the lower MB
}
}
\description{
Compute matching bounds for one-to-one matches at progressively relaxed constraint values
}
\details{
Integer programs are often complex and slow to solve. Because of this, we suggest solving a linearly relaxed version of the desired MB programs and then converting those solutions to integer via approximations. Approximations currently implemented include two options:
\itemize{
\item fast: this approximation removes the quality constraints and tries to match the coefficients of the relaxation as close as possible. May result in violation of the quality constraints.
\item feasible: this approximation tries to find the integer solution closest to the linearly relaxed solution. Constraints will not be violated but problem may result to be infeasible or suboptimal.
}

In general, we suggest checking the balance of any matched set computed with approximation methods after it is returned by MBs.
}
