% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraints_Rcplex.R
\name{progressive_constraint_caliper}
\alias{progressive_constraint_caliper}
\title{Defines a progressively-relaxed caliper distance constraint}
\usage{
progressive_constraint_caliper(
  dist_matrix,
  caliper,
  D = NULL,
  init_rf = 0,
  end_rf = NULL,
  rf_step = NULL,
  nsteps = NULL
)
}
\arguments{
\item{dist_matrix}{EITEHR a N x N matrix of distances between units. Or a Nt x Nc matrix of distances between treated and control units. If the former the the argument D must also be provided.}

\item{caliper}{either: a Nt x Nc matrix of maximum allowed distances between treated and control units or a scalar denoting the max allowed distance between any pair of units.}

\item{D}{binary treatment indicator vector if not left NULL, then dist_matrix is assumed to be NxN}

\item{init_rf}{The initial relaxation factor (a proportion > 0) of the constraints}

\item{end_rf}{The final relaxation factor that should be reached from the initial in nsteps steps. If provided then rf_step or nsteps can be automatically computed depending on which of the two is provided.}

\item{rf_step}{The amount to increase the relaxation factor by each step. If provided then either end_rf or nsteps can be automatically computed depending on which of the two is provided.}

\item{nsteps}{The total number of times MBs should be estimated. f provided then either end_rf or rf_step can be automatically computed depending on which of the two is provided.}
}
\value{
A function to be used in conjunction with one of the MB computations
}
\description{
Defines a progressively-relaxed caliper distance constraint
}
